[
    {
        "label": "django.db.models.deletion",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.db.models.deletion",
        "description": "django.db.models.deletion",
        "detail": "django.db.models.deletion",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "datetime",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "datetime",
        "description": "datetime",
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "timezone",
        "importPath": "django.utils",
        "description": "django.utils",
        "isExtraImport": true,
        "detail": "django.utils",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "reverse",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "HttpResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "HttpResponseRedirect",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "generic",
        "importPath": "django.views",
        "description": "django.views",
        "isExtraImport": true,
        "detail": "django.views",
        "documentation": {}
    },
    {
        "label": "setup",
        "importPath": "setuptools",
        "description": "setuptools",
        "isExtraImport": true,
        "detail": "setuptools",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "django-polls.django_polls.migrations.0001_initial",
        "description": "django-polls.django_polls.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = []\n    operations = [\n        migrations.CreateModel(\n            name=\"Question\",\n            fields=[\n                (\n                    \"id\",\n                    models.BigAutoField(",
        "detail": "django-polls.django_polls.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "ChoiceInline",
        "kind": 6,
        "importPath": "django-polls.django_polls.admin",
        "description": "django-polls.django_polls.admin",
        "peekOfCode": "class ChoiceInline(admin.TabularInline):\n    model = Choice\n    extra = 3\nclass QuestionAdmin(admin.ModelAdmin):\n    fieldsets = [\n        (\"Question text\", {\"fields\": [\"question_text\"]}),\n        (\"Date information\", {\"fields\": [\"pub_date\"], \"classes\": [\"collapse\"]}),\n    ]\n    list_display = [\"question_text\", \"pub_date\", \"was_published_recently\"]\n    list_filter = [\"pub_date\"]",
        "detail": "django-polls.django_polls.admin",
        "documentation": {}
    },
    {
        "label": "QuestionAdmin",
        "kind": 6,
        "importPath": "django-polls.django_polls.admin",
        "description": "django-polls.django_polls.admin",
        "peekOfCode": "class QuestionAdmin(admin.ModelAdmin):\n    fieldsets = [\n        (\"Question text\", {\"fields\": [\"question_text\"]}),\n        (\"Date information\", {\"fields\": [\"pub_date\"], \"classes\": [\"collapse\"]}),\n    ]\n    list_display = [\"question_text\", \"pub_date\", \"was_published_recently\"]\n    list_filter = [\"pub_date\"]\n    search_fields = [\"question_text\"]\n    inlines = [ChoiceInline]\nadmin.site.register(Question, QuestionAdmin)",
        "detail": "django-polls.django_polls.admin",
        "documentation": {}
    },
    {
        "label": "PollsConfig",
        "kind": 6,
        "importPath": "django-polls.django_polls.apps",
        "description": "django-polls.django_polls.apps",
        "peekOfCode": "class PollsConfig(AppConfig):\n    default_auto_field = \"django.db.models.BigAutoField\"\n    name = \"django_polls\"\n    label = \"polls\"",
        "detail": "django-polls.django_polls.apps",
        "documentation": {}
    },
    {
        "label": "Question",
        "kind": 6,
        "importPath": "django-polls.django_polls.models",
        "description": "django-polls.django_polls.models",
        "peekOfCode": "class Question(models.Model):\n    question_text = models.CharField(max_length=200)\n    pub_date = models.DateTimeField('date published')\n    def __str__(self):\n        return self.question_text\n    @admin.display(boolean=True, ordering='pub_date', description='Published recently?')\n    def was_published_recently(self):\n        return self.pub_date >= timezone.now() - datetime.timedelta(days=1)\nclass Choice(models.Model):\n    question = models.ForeignKey(Question, on_delete=models.CASCADE)",
        "detail": "django-polls.django_polls.models",
        "documentation": {}
    },
    {
        "label": "Choice",
        "kind": 6,
        "importPath": "django-polls.django_polls.models",
        "description": "django-polls.django_polls.models",
        "peekOfCode": "class Choice(models.Model):\n    question = models.ForeignKey(Question, on_delete=models.CASCADE)\n    choice_text = models.CharField(max_length=200)\n    votes = models.IntegerField(default=0)\n    def __str__(self):\n        return self.choice_text",
        "detail": "django-polls.django_polls.models",
        "documentation": {}
    },
    {
        "label": "app_name",
        "kind": 5,
        "importPath": "django-polls.django_polls.urls",
        "description": "django-polls.django_polls.urls",
        "peekOfCode": "app_name = \"polls\"\nurlpatterns = [\n    path(\"\", views.IndexView.as_view(), name=\"index\"),\n    path(\"<int:pk>/\", views.DetailView.as_view(), name=\"detail\"),\n    path(\"<int:pk>/results/\", views.ResultsView.as_view(), name=\"results\"),\n    path(\"<int:question_id>/vote/\", views.vote, name=\"vote\"),\n]",
        "detail": "django-polls.django_polls.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "django-polls.django_polls.urls",
        "description": "django-polls.django_polls.urls",
        "peekOfCode": "urlpatterns = [\n    path(\"\", views.IndexView.as_view(), name=\"index\"),\n    path(\"<int:pk>/\", views.DetailView.as_view(), name=\"detail\"),\n    path(\"<int:pk>/results/\", views.ResultsView.as_view(), name=\"results\"),\n    path(\"<int:question_id>/vote/\", views.vote, name=\"vote\"),\n]",
        "detail": "django-polls.django_polls.urls",
        "documentation": {}
    },
    {
        "label": "IndexView",
        "kind": 6,
        "importPath": "django-polls.django_polls.views",
        "description": "django-polls.django_polls.views",
        "peekOfCode": "class IndexView(generic.ListView):\n    template_name = \"polls/index.html\"\n    context_object_name = \"latest_questions_list\"\n    def get_queryset(self):\n        return Question.objects.order_by(\"-pub_date\")[:5]\nclass DetailView(generic.DetailView):\n    model = Question\n    template_name = \"polls/detail.html\"\nclass ResultsView(generic.DetailView):\n    model = Question",
        "detail": "django-polls.django_polls.views",
        "documentation": {}
    },
    {
        "label": "DetailView",
        "kind": 6,
        "importPath": "django-polls.django_polls.views",
        "description": "django-polls.django_polls.views",
        "peekOfCode": "class DetailView(generic.DetailView):\n    model = Question\n    template_name = \"polls/detail.html\"\nclass ResultsView(generic.DetailView):\n    model = Question\n    template_name = \"polls/results.html\"\ndef vote(request, question_id):\n    question = get_object_or_404(Question, pk=question_id)\n    try:\n       selected_choice = question.choice_set.get(pk=request.POST[\"choice\"])",
        "detail": "django-polls.django_polls.views",
        "documentation": {}
    },
    {
        "label": "ResultsView",
        "kind": 6,
        "importPath": "django-polls.django_polls.views",
        "description": "django-polls.django_polls.views",
        "peekOfCode": "class ResultsView(generic.DetailView):\n    model = Question\n    template_name = \"polls/results.html\"\ndef vote(request, question_id):\n    question = get_object_or_404(Question, pk=question_id)\n    try:\n       selected_choice = question.choice_set.get(pk=request.POST[\"choice\"])\n    except (KeyError, Choice.DoesNotExist):\n      return render(\n         request,",
        "detail": "django-polls.django_polls.views",
        "documentation": {}
    },
    {
        "label": "vote",
        "kind": 2,
        "importPath": "django-polls.django_polls.views",
        "description": "django-polls.django_polls.views",
        "peekOfCode": "def vote(request, question_id):\n    question = get_object_or_404(Question, pk=question_id)\n    try:\n       selected_choice = question.choice_set.get(pk=request.POST[\"choice\"])\n    except (KeyError, Choice.DoesNotExist):\n      return render(\n         request,\n         \"polls/detail.html\",\n         {\n            \"question\": question,",
        "detail": "django-polls.django_polls.views",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "mysite.mysite.asgi",
        "description": "mysite.mysite.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "mysite.mysite.asgi",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "mysite.mysite.settings",
        "description": "mysite.mysite.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = \"django-insecure-&p7(@i%x=ya!0y_@r9srti-i^4u+4ug-k+4f*7g7ao6n8=uvo6\"\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [",
        "detail": "mysite.mysite.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "mysite.mysite.settings",
        "description": "mysite.mysite.settings",
        "peekOfCode": "SECRET_KEY = \"django-insecure-&p7(@i%x=ya!0y_@r9srti-i^4u+4ug-k+4f*7g7ao6n8=uvo6\"\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    \"django_polls.apps.PollsConfig\",\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",",
        "detail": "mysite.mysite.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "mysite.mysite.settings",
        "description": "mysite.mysite.settings",
        "peekOfCode": "DEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    \"django_polls.apps.PollsConfig\",\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",\n    \"django.contrib.messages\",",
        "detail": "mysite.mysite.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "mysite.mysite.settings",
        "description": "mysite.mysite.settings",
        "peekOfCode": "ALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    \"django_polls.apps.PollsConfig\",\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",\n    \"django.contrib.messages\",\n    \"django.contrib.staticfiles\",",
        "detail": "mysite.mysite.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "mysite.mysite.settings",
        "description": "mysite.mysite.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    \"django_polls.apps.PollsConfig\",\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",\n    \"django.contrib.messages\",\n    \"django.contrib.staticfiles\",\n]\nMIDDLEWARE = [",
        "detail": "mysite.mysite.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "mysite.mysite.settings",
        "description": "mysite.mysite.settings",
        "peekOfCode": "MIDDLEWARE = [\n    \"django.middleware.security.SecurityMiddleware\",\n    \"django.contrib.sessions.middleware.SessionMiddleware\",\n    \"django.middleware.common.CommonMiddleware\",\n    \"django.middleware.csrf.CsrfViewMiddleware\",\n    \"django.contrib.auth.middleware.AuthenticationMiddleware\",\n    \"django.contrib.messages.middleware.MessageMiddleware\",\n    \"django.middleware.clickjacking.XFrameOptionsMiddleware\",\n]\nROOT_URLCONF = \"mysite.urls\"",
        "detail": "mysite.mysite.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "mysite.mysite.settings",
        "description": "mysite.mysite.settings",
        "peekOfCode": "ROOT_URLCONF = \"mysite.urls\"\nTEMPLATES = [\n    {\n        \"BACKEND\": \"django.template.backends.django.DjangoTemplates\",\n        \"DIRS\": [BASE_DIR / \"templates\"],\n        \"APP_DIRS\": True,\n        \"OPTIONS\": {\n            \"context_processors\": [\n                \"django.template.context_processors.debug\",\n                \"django.template.context_processors.request\",",
        "detail": "mysite.mysite.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "mysite.mysite.settings",
        "description": "mysite.mysite.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        \"BACKEND\": \"django.template.backends.django.DjangoTemplates\",\n        \"DIRS\": [BASE_DIR / \"templates\"],\n        \"APP_DIRS\": True,\n        \"OPTIONS\": {\n            \"context_processors\": [\n                \"django.template.context_processors.debug\",\n                \"django.template.context_processors.request\",\n                \"django.contrib.auth.context_processors.auth\",",
        "detail": "mysite.mysite.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "mysite.mysite.settings",
        "description": "mysite.mysite.settings",
        "peekOfCode": "WSGI_APPLICATION = \"mysite.wsgi.application\"\n# Database\n# https://docs.djangoproject.com/en/5.0/ref/settings/#databases\nDATABASES = {\n    \"default\": {\n        \"ENGINE\": \"django.db.backends.sqlite3\",\n        \"NAME\": BASE_DIR / \"db.sqlite3\",\n    }\n}\n# Password validation",
        "detail": "mysite.mysite.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "mysite.mysite.settings",
        "description": "mysite.mysite.settings",
        "peekOfCode": "DATABASES = {\n    \"default\": {\n        \"ENGINE\": \"django.db.backends.sqlite3\",\n        \"NAME\": BASE_DIR / \"db.sqlite3\",\n    }\n}\n# Password validation\n# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators\nAUTH_PASSWORD_VALIDATORS = [\n    {",
        "detail": "mysite.mysite.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "mysite.mysite.settings",
        "description": "mysite.mysite.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.UserAttributeSimilarityValidator\",\n    },\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.MinimumLengthValidator\",\n    },\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.CommonPasswordValidator\",\n    },",
        "detail": "mysite.mysite.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "mysite.mysite.settings",
        "description": "mysite.mysite.settings",
        "peekOfCode": "LANGUAGE_CODE = \"en-us\"\nTIME_ZONE = \"UTC\"\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.0/howto/static-files/\nSTATIC_URL = \"static/\"\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"",
        "detail": "mysite.mysite.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "mysite.mysite.settings",
        "description": "mysite.mysite.settings",
        "peekOfCode": "TIME_ZONE = \"UTC\"\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.0/howto/static-files/\nSTATIC_URL = \"static/\"\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"",
        "detail": "mysite.mysite.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "mysite.mysite.settings",
        "description": "mysite.mysite.settings",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.0/howto/static-files/\nSTATIC_URL = \"static/\"\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"",
        "detail": "mysite.mysite.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "mysite.mysite.settings",
        "description": "mysite.mysite.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.0/howto/static-files/\nSTATIC_URL = \"static/\"\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"",
        "detail": "mysite.mysite.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "mysite.mysite.settings",
        "description": "mysite.mysite.settings",
        "peekOfCode": "STATIC_URL = \"static/\"\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"",
        "detail": "mysite.mysite.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "mysite.mysite.settings",
        "description": "mysite.mysite.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"",
        "detail": "mysite.mysite.settings",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "mysite.mysite.urls",
        "description": "mysite.mysite.urls",
        "peekOfCode": "urlpatterns = [\n    path(\"admin/\", admin.site.urls),\n    path(\"polls/\", include(\"django_polls.urls\")),\n]",
        "detail": "mysite.mysite.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "mysite.mysite.wsgi",
        "description": "mysite.mysite.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "mysite.mysite.wsgi",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "mysite.manage",
        "description": "mysite.manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault(\"DJANGO_SETTINGS_MODULE\", \"mysite.settings\")\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "mysite.manage",
        "documentation": {}
    }
]